<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Action
 *
 * @ORM\Table(name="packet_action")
 * @ORM\Entity(repositoryClass="AppBundle\Entity\Repository\ActionRepository")
 */
class Action
{
    const UNKNOWN = 0;
    const OPEN = 1;
    const UPCOMING = 2;
    const SHIPPED = 3;
    const ARCHIVED = 4;
    const REMOVE = 5;
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="bigint")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;


    /**
     * @var string
     *
     * @ORM\Column(name="coordenate_from", type="string", length=255, nullable=true)
     */
    private $coordenateFrom;

    /**
     * @var string
     *
     * @ORM\Column(name="coordenate_to", type="string", length=255, nullable=true)
     */
    private $coordenateTo;

    /**
     * @var date
     *
     * @ORM\Column(name="date_from", type="date")
     */
    private $dateFrom;

    /**
 * @var date
 *
 * @ORM\Column(name="date_to", type="date")
 */
    private $dateTo;

    /**
     * @var float
     *
     * @ORM\Column(name="price", type="float", nullable=true)
     */
    private $price;

    /**
     * @var float
     *
     * @ORM\Column(name="weight", type="float", nullable=true)
     */
    private $weight;

    /**
     * @var float
     *
     * @ORM\Column(name="volumen", type="float", nullable=true)
     */
    private $volumen;

    /**
     * @var text
     *
     * @ORM\Column(name="observation", type="text", nullable=true)
     */
    private $observation;

    /**
     * @var boolean
     *
     * @ORM\Column(name="charity", type="boolean", nullable=true)
     */
    private $caridad = false;

    /**
     * @var integer
     *
     * @ORM\Column(name="state", type="integer")
     */
    private $state = Action::OPEN;

    /**
     * @var integer
     *
     * @ORM\Column(name="type", type="integer", nullable=true)
     */
    private $type;

    /**
     * @var string
     *
     * @ORM\Column(name="carry_type", type="string", length=255, nullable=true)
     */
    private $carryType;

    /**
     * @var string
     *
     * @ORM\Column(name="packet_name", type="string", length=255, nullable=true)
     */
    private $packetName;

    /**
     * @var string
     *
     * @ORM\Column(name="path_picture", type="string", length=255, nullable=true)
     */
    private $pathPicture;

    /**
     * @Assert\Image(maxSize = "1000k")
     */
    private $picture;

    /**
     * @ORM\ManyToOne(targetEntity="User", inversedBy="actions")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;

    /**
     * @ORM\OneToOne(targetEntity="AppBundle\Entity\Direction", inversedBy="action",cascade={"persist","remove"})
     * @ORM\JoinColumn(name="direction_id", referencedColumnName="id")
     */
    private $direction;

    /**
     * @ORM\OneToMany(targetEntity="Action", mappedBy="carry", cascade={"persist"})
     */
    private $packet;

    /**
     * @ORM\ManyToOne(targetEntity="Action", inversedBy="packet", cascade={"persist"})
     * @ORM\JoinColumn(name="carry_id", referencedColumnName="id")
     */
    private $carry;

    /**
     * @ORM\OneToMany(targetEntity="RealTimeGps", mappedBy="action")
     */
    private $RealTimeGps;

    /**
     * @ORM\OneToMany(targetEntity="Comments", mappedBy="action")
     */
    private $comments;


    /**
     *
     * @ORM\ManyToMany(targetEntity="Action", inversedBy="packetRequest", cascade={"persist"})
     * @ORM\JoinTable(name="packet_request",
     * joinColumns={@ORM\JoinColumn(name="packet_id", referencedColumnName="id")},
     * inverseJoinColumns={@ORM\JoinColumn(name="carry_id", referencedColumnName="id")})
     */
    private $carryRequest;

    /**
     *
     * @ORM\ManyToMany(targetEntity="Action", mappedBy="carryRequest", cascade={"persist"})
     */
    private $packetRequest;



    /**
     * @param UploadedFile $picture
     */
    public function setPicture(UploadedFile $picture = null)
    {
        $this->picture = $picture;
    }


    /**
     * @return UploadedFile
     */
    public function getPicture()
    {
        return $this->picture;
    }
    /**
     *
     * @return string
     */
    public function __toString(){
        return 'Action';
    }

}
