<?php

namespace AppBundle\Entity\Repository;

/**
 * ActionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActionRepository extends \Doctrine\ORM\EntityRepository
{
    public function packetForNewTrip($countryFrom, $cityFrom, $stateFrom,$countryTo, $cityTo, $stateTo, $volumen, $weight, $type, $user, $dateFrom, $dateTo){
        //packetForNewTrip($countryFrom, $cityFrom, $stateFrom,$countryTo, $cityTo, $stateTo, $volumen, $weight, $type);
        $em = $this->getEntityManager();
        if($type == 1) {
            $q = 'd.countryFrom =:countryFrom AND d.cityFrom =:cityFrom AND d.stateFrom =:stateFrom
             AND d.countryTo =:countryTo AND d.cityTo =:cityTo AND d.stateTo =:stateTo
             AND p.weight <:weight AND p.volumen <:volumen AND p.type <>:type AND p.state =:state AND p.user <>:user
             AND p.dateFrom >=:dateFrom AND p.dateTo >=:dateTo';
                }
        else
            $q = 'd.countryFrom =:countryFrom AND d.cityFrom =:cityFrom AND d.stateFrom =:stateFrom
             AND d.countryTo =:countryTo AND d.cityTo =:cityTo AND d.stateTo =:stateTo
             AND p.weight >:weight AND p.volumen >:volumen AND p.type <>:type AND p.state =:state AND p.user <>:user
             AND p.dateFrom <=:dateFrom AND p.dateTo <=:dateTo';
//        dump($q);die;
        $query = $em->createQueryBuilder()
            ->select('p')
            ->from('AppBundle:Action','p')
            ->innerJoin('p.direction','d')
            ->where($q)
            ->setParameter('countryFrom', $countryFrom)
            ->setParameter('cityFrom', $cityFrom)
            ->setParameter('stateFrom', $stateFrom)
            ->setParameter('countryTo', $countryTo)
            ->setParameter('cityTo', $cityTo)
            ->setParameter('stateTo', $stateTo)
            ->setParameter('weight', $weight)
            ->setParameter('volumen', $volumen)
            ->setParameter('type', $type)
            ->setParameter('state', 1)
            ->setParameter('user', $user)
            ->setParameter('dateFrom', $dateFrom)
            ->setParameter('dateTo', $dateTo)
            ->getQuery()
            ->getResult();
        return $query;
    }
    public function searchActionEntity($packetName, $type, $user, $dateFrom, $dateTo){
        //packetForNewTrip($countryFrom, $cityFrom, $stateFrom,$countryTo, $cityTo, $stateTo, $volumen, $weight, $type);
        $em = $this->getEntityManager();
        if($type == 1) {
            $q = 'p.carryType =:packetName AND p.type =:type AND p.user =:user
             AND p.dateFrom =:dateFrom AND p.dateTo =:dateTo';
        }
        else
            $q = 'p.packetName =:packetName AND p.type =:type AND p.user =:user
             AND p.dateFrom =:dateFrom AND p.dateTo =:dateTo';

        try {
            $query = $em->createQueryBuilder()
                ->select('p')
                ->from('AppBundle:Action','p')
                ->innerJoin('p.direction','d')
                ->where($q)
                ->setParameter('packetName', $packetName)
                ->setParameter('type', $type)
                ->setParameter('user', $user)
                ->setParameter('dateFrom', $dateFrom)
                ->setParameter('dateTo', $dateTo)
                ->getQuery()
                ->getSingleResult();
            return $query;
        }
        catch(\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function myItems($id, $type){
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder()
            ->select("a")
            ->from("AppBundle:Action","a")
            ->innerJoin("a.user", "u")
            ->where("u.id =:id AND a.type =:type AND a.state <:state")
            ->setParameter("id",$id)
            ->setParameter("type",$type)
            ->setParameter("state",3)
            ->getQuery()
            ->getResult();

        return $query;
    }
    public function requestItems($id){
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder()
            ->select("a")
            ->from("AppBundle:Action","a")
            ->innerJoin("a.user", "u")
            ->where("u.id =:id AND a.type =:type AND a.state <:state")
            ->setParameter("id",$id)
            ->setParameter("type",$type)
            ->setParameter("state",3)
            ->getQuery()
            ->getResult();

        return $query;
    }
}
